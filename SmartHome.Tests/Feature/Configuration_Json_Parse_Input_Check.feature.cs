// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SmartHome.Tests.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Configuration_Json_Valid_Input")]
    public partial class Configuration_Json_Valid_InputFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Configuration_Json_Parse_Input_Check.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Configuration_Json_Valid_Input", "\tIn order to avoid silly mistakes\r\n\tI want to check json parse process with varit" +
                    "y of input set", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Configuration json with valid input")]
        public virtual void ConfigurationJsonWithValidInput()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Configuration json with valid input", ((string[])(null)));
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("I am at the configuration json input page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "field",
                        "value"});
            table1.AddRow(new string[] {
                        "MessgeTopic",
                        "Configuration"});
            table1.AddRow(new string[] {
                        "PublishMessage",
                        "{\"ChannelStatus\":[{\"ChannelTableId\":1,\"StatusValue\":\"0\",\"StatusType\":1,\"Id\":1},{\"" +
                            "ChannelTableId\":1,\"StatusValue\":\"0\",\"StatusType\":3,\"Id\":2},{\"ChannelTableId\":1,\"" +
                            "StatusValue\":\"85\",\"StatusType\":2,\"Id\":3},{\"ChannelTableId\":2,\"StatusValue\":\"1\",\"" +
                            "StatusType\":1,\"Id\":4},{\"ChannelTableId\":2,\"StatusValue\":\"0\",\"StatusType\":3,\"Id\":" +
                            "5},{\"ChannelTableId\":2,\"StatusValue\":\"41\",\"StatusType\":2,\"Id\":6},{\"ChannelTableI" +
                            "d\":3,\"StatusValue\":\"0\",\"StatusType\":1,\"Id\":7},{\"ChannelTableId\":3,\"StatusValue\":" +
                            "\"0\",\"StatusType\":3,\"Id\":8},{\"ChannelTableId\":3,\"StatusValue\":\"100\",\"StatusType\":" +
                            "2,\"Id\":9},{\"ChannelTableId\":4,\"StatusValue\":\"0\",\"StatusType\":1,\"Id\":10},{\"Channe" +
                            "lTableId\":4,\"StatusValue\":\"0\",\"StatusType\":3,\"Id\":11},{\"ChannelTableId\":4,\"Statu" +
                            "sValue\":\"100\",\"StatusType\":2,\"Id\":12},{\"ChannelTableId\":5,\"StatusValue\":\"1\",\"Sta" +
                            "tusType\":1,\"Id\":13},{\"ChannelTableId\":5,\"StatusValue\":\"0\",\"StatusType\":3,\"Id\":14" +
                            "},{\"ChannelTableId\":5,\"StatusValue\":\"100\",\"StatusType\":2,\"Id\":15},{\"ChannelTable" +
                            "Id\":6,\"StatusValue\":\"0\",\"StatusType\":1,\"Id\":16},{\"ChannelTableId\":6,\"StatusValue" +
                            "\":\"0\",\"StatusType\":3,\"Id\":17},{\"ChannelTableId\":6,\"StatusValue\":\"0\",\"StatusType\"" +
                            ":2,\"Id\":18}],\"VersionDetails\":[{\"DeviceType\":1,\"VersionId\":1,\"Id\":1,\"HardwareVer" +
                            "sion\":\"00\"},{\"DeviceType\":2,\"VersionId\":1,\"Id\":2,\"HardwareVersion\":\"00\"}],\"Chann" +
                            "el\":[{\"LoadName\":\"Light\",\"DeviceTableId\":1,\"ChannelNo\":1,\"Id\":1,\"LoadType\":1,\"Lo" +
                            "adWatt\":0},{\"LoadName\":\"Fan\",\"DeviceTableId\":1,\"ChannelNo\":2,\"Id\":2,\"LoadType\":3" +
                            ",\"LoadWatt\":0},{\"LoadName\":\"Dimlight\",\"DeviceTableId\":1,\"ChannelNo\":3,\"Id\":3,\"Lo" +
                            "adType\":2,\"LoadWatt\":0},{\"LoadName\":\"Tube Light\",\"DeviceTableId\":1,\"ChannelNo\":4" +
                            ",\"Id\":4,\"LoadType\":4,\"LoadWatt\":0},{\"LoadName\":\"CFL\",\"DeviceTableId\":1,\"ChannelN" +
                            "o\":5,\"Id\":5,\"LoadType\":5,\"LoadWatt\":0},{\"LoadName\":\"Fan\",\"DeviceTableId\":1,\"Chan" +
                            "nelNo\":6,\"Id\":6,\"LoadType\":3,\"LoadWatt\":0}],\"Device\":[{\"DeviceId\":32769,\"DeviceN" +
                            "ame\":\"SMSW6G 1041075569\",\"DeviceHash\":1041075569,\"Watt\":0,\"IsDeleted\":false,\"Id\"" +
                            ":1,\"Version\":\"00\",\"DeviceType\":2}],\"NextAssociatedDeviceId\":[{\"NextDeviceId\":327" +
                            "70}],\"RgbwStatus\":[{\"Id\":1,\"DeviceTableId\":1,\"StatusType\":1,\"IsPowerOn\":true,\"Co" +
                            "lorR\":10,\"ColorG\":10,\"ColorB\":50,\"IsWhiteEnabled\":true,\"DimmingValue\":10},{\"Id\":" +
                            "2,\"DeviceTableId\":1,\"StatusType\":1,\"IsPowerOn\":true,\"ColorR\":10,\"ColorG\":10,\"Col" +
                            "orB\":100,\"IsWhiteEnabled\":true,\"DimmingValue\":10}],\"Version\":[{\"AppName\":\"SmartH" +
                            "ome\",\"Id\":1,\"PassPhrase\":\"9OQ26N\",\"AuthCode\":\"0123456789ABCDEF\",\"AppVersion\":\"1." +
                            "5\"}],\"DeviceStatus\":[{\"DeviceTableId\":1,\"StatusValue\":0,\"StatusType\":53,\"Id\":1}," +
                            "{\"DeviceTableId\":1,\"StatusValue\":1,\"StatusType\":5,\"Id\":2},{\"DeviceTableId\":1,\"St" +
                            "atusValue\":0,\"StatusType\":55,\"Id\":3}]}"});
#line 7
 testRunner.When("I fill in the following form", ((string)(null)), table1, "When ");
#line 12
  testRunner.And("I click the \'publish\' button for publish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
  testRunner.And("I click the \'subscribe\' button for subscrib", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.Then("I should be at the subscribe page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
